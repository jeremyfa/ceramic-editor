name: Build Editor
on:
  push:
    tags:
      - v**

jobs:

  # Linux build failing at the moment
  # editor-linux:
  #   runs-on: ubuntu-22.04
  #   steps:

  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: true

  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18

  #     - name: Install packages
  #       working-directory: ci
  #       run: |
  #         npm install

  #     - name: Download Ceramic
  #       working-directory:
  #       run: |
  #         node ci/download-ceramic.js

  #     - name: Setup Haxe
  #       working-directory: .
  #       run: |
  #         export NEKOPATH=$PWD'/ceramic/git/haxe-binary/linux/neko'
  #         export HAXEPATH=$PWD'/ceramic/git/haxe-binary/linux/haxe'
  #         echo 'neko path: '$NEKOPATH
  #         echo 'haxe path: '$HAXEPATH
  #         sudo mkdir -p /usr/local/bin
  #         sudo mkdir -p /usr/local/lib
  #         sudo mkdir -p /usr/local/share/haxe
  #         sudo ln -s $HAXEPATH/haxe                 /usr/local/bin/haxe
  #         sudo ln -s $HAXEPATH/haxelib              /usr/local/bin/haxelib
  #         sudo ln -s $HAXEPATH/haxe-bin             /usr/local/bin/haxe-bin
  #         sudo ln -s $HAXEPATH/haxelib-bin          /usr/local/bin/haxelib-bin
  #         sudo ln -s $HAXEPATH/std                  /usr/local/share/haxe/std
  #         sudo ln -s $NEKOPATH/neko                 /usr/local/bin/neko
  #         sudo ln -s $NEKOPATH/nekoc                /usr/local/bin/nekoc
  #         sudo ln -s $NEKOPATH/nekoml               /usr/local/bin/nekoml
  #         sudo ln -s $NEKOPATH/nekotools            /usr/local/bin/nekotools
  #         sudo ln -s $NEKOPATH                      /usr/local/lib/neko
  #         sudo ln -s $NEKOPATH/libneko.so           /usr/local/lib/libneko.so
  #         sudo ln -s $NEKOPATH/libneko.so.2.3.0     /usr/local/lib/libneko.so.2.3.0
  #         sudo ln -s $NEKOPATH/libneko.so.2         /usr/local/lib/libneko.so.2
  #         sudo ldconfig
  #         sudo ldconfig /usr/local/lib
  #         echo 'neko: '$(neko -version)
  #         echo 'haxe: '$(haxe --version)

  #     - name: Install Ceramic
  #       working-directory: ceramic/tools
  #       run: |
  #         ./ceramic link

  #     - name: Install native dependencies
  #       run: |
  #         sudo apt-get install libsdl2-dev
  #         sudo apt-get install libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev libopenal-dev

  #     - name: Build editor
  #       working-directory: .
  #       run: |
  #         ceramic clay build linux --setup --assets
  #         cd project/linux
  #         find . -type f -print | zip ../../editor-linux.zip -@

  #     - name: Upload Files
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: editor-linux.zip
  #         path: editor-linux.zip

  editor-mac:
    runs-on: macos-14
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install packages
        working-directory: ci
        run: |
          npm install

      - name: Download Ceramic
        working-directory:
        run: |
          node ci/download-ceramic.js

      - name: Setup Haxe
        working-directory: .
        run: |
          set -ex
          export NEKOPATH=$PWD'/haxe/git/haxe-binary/mac/neko'
          export HAXEPATH=$PWD'/haxe/git/haxe-binary/mac/haxe'
          echo 'neko path: '$NEKOPATH
          echo 'haxe path: '$HAXEPATH
          sudo mkdir -p /usr/local/bin
          sudo mkdir -p /usr/local/lib
          sudo mkdir -p /usr/local/share/haxe
          sudo ln -s $HAXEPATH/haxe                 /usr/local/bin/haxe
          sudo ln -s $HAXEPATH/haxelib              /usr/local/bin/haxelib
          sudo ln -s $HAXEPATH/haxe-bin             /usr/local/bin/haxe-bin
          sudo ln -s $HAXEPATH/haxelib-bin          /usr/local/bin/haxelib-bin
          sudo ln -s $HAXEPATH/std                  /usr/local/share/haxe/std
          sudo ln -s $NEKOPATH/neko                 /usr/local/bin/neko
          sudo ln -s $NEKOPATH/nekoc                /usr/local/bin/nekoc
          sudo ln -s $NEKOPATH/nekoml               /usr/local/bin/nekoml
          sudo ln -s $NEKOPATH/nekotools            /usr/local/bin/nekotools
          sudo ln -s $NEKOPATH                      /usr/local/lib/neko
          sudo ln -s $NEKOPATH/libneko.dylib        /usr/local/lib/libneko.dylib
          sudo ln -s $NEKOPATH/libneko.2.3.0.dylib  /usr/local/lib/libneko.2.3.0.dylib
          sudo ln -s $NEKOPATH/libneko.2.dylib      /usr/local/lib/libneko.2.dylib
          set +x
          echo 'neko: '$(neko -version)
          echo 'haxe: '$(haxe --version)

      - name: Install Ceramic
        working-directory: ceramic/tools
        run: |
          ./ceramic link

      - name: Build editor
        working-directory: .
        run: |
          ceramic clay build mac --setup --assets
          cd project/mac

      - name: Upload Files
        uses: actions/upload-artifact@v4
        with:
          name: editor-mac
          path: project/mac

  editor-windows:
    runs-on: windows-2022
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install packages
        working-directory: ci
        run: |
          npm install

      - name: Setup Haxe
        uses: jeremyfa/setup-haxe@master
        with:
          haxe-version: 4.3.3

      - name: Download Ceramic
        working-directory:
        run: |
          node ci/download-ceramic.js

      - name: Build editor
        working-directory: .
        run: |
          ceramic/tools/ceramic clay build windows --setup --assets

      - name: Upload Files
        uses: actions/upload-artifact@v4
        with:
          name: editor-windows
          path: project/windows

  create-release:
    needs: [editor-mac, editor-windows]
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: editor-*
          merge-multiple: false

      - name: Create archives
        working-directory: .
        run: |
          cd editor-windows
          zip --symlinks -9 -r ../editor-windows.zip .
          cd ..
          cd editor-mac
          zip --symlinks -9 -r ../editor-mac.zip .
          cd ..

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.TAG_NAME }}
          body: |
            Ceramic Editor ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload editor-windows.zip
        id: upload_editor_windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./editor-windows.zip
          asset_name: editor-windows.zip
          asset_content_type: application/zip

      - name: Upload editor-mac.zip
        id: upload_editor_mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./editor-mac.zip
          asset_name: editor-mac.zip
          asset_content_type: application/zip
